# Starting ASM program at 0x000003e8

#             .org 1000                      ; Semi-Colons denote comments
# Mem Addr: 0x000003e8

#             .byte 12H, 30, 22H, 10011101B  // As do double forward slashes
00010010000111100010001010011101
# Mem Addr: 0x000003ec

# Loop:       add   $s1, $s2, $s3
00000010010100111000100000100000
# Mem Addr: 0x000003f0

#             addi  $s1, $s2, 100
00100010010100010000000001100100
# Mem Addr: 0x000003f4

#             sub   $s1, $s2, $s3
00000010010100111000100000100010
# Mem Addr: 0x000003f8

#             lw    $s1, 100($s2)
10001110010100010000000001100100
# Mem Addr: 0x000003fc

#             lui   $s1, 100
00111100000100010000000001100100
# Mem Addr: 0x00000400

#             sw    $s1, 100($s2)
10101110010100010000000001100100
# Mem Addr: 0x00000404

#             slt   $s1, $s2, $s3
00000010010100111000100000101010
# Mem Addr: 0x00000408

#             beq   $s1 $s2, Loop
00010010010100011111111111100111
# Mem Addr: 0x0000040c

# Test:       move  $t1, $t2
00100000000010100000000000000000
# Mem Addr: 0x00000410

#             clear $t0
00110000000010000000000000000000
# Mem Addr: 0x00000414

#             ble   $t3, $t5, LT
00000001101010110000100000000000
00010100000000010000000000100100
# Mem Addr: 0x0000041c

#             bgt   $t4, $t5, GT
00000001101011000000100000000000
00010000000000010000000000010100
# Mem Addr: 0x00000424

#             bge   $t5, $t3, EQ
00000001101010110000100000000000
00010100000000010000000000011100
# Mem Addr: 0x0000042c

#             bne   $s1, $s2, Exit
00010110010100010000000000100100
# Mem Addr: 0x00000430

#             beq   $t1, $t0, Test           // Modified, beq and bne do not 
00010001000010011111111111100111
# Mem Addr: 0x00000434

#             beq   $t2, $a0, Loop           // compare register with immediate
00010000100010101111111100001011
# Mem Addr: 0x00000438

# GT:         li    $t1, 16
00100000000010010000000000010000
# Mem Addr: 0x0000043c

#             j     Exit
00001000000000000000010001010100
# Mem Addr: 0x00000440

# LT:         li    $t2, 100000
00100000000010101100001101010000
# Mem Addr: 0x00000444

#             jr    $ra 
00000000000000001111100000001000
# Mem Addr: 0x00000448

# EQ:         addi  $t0, $t2 100000
00100001010010001100001101010000
# Mem Addr: 0x0000044c

#             lw    $t5, 100000($t2)
10001101010011011100001101010000
# Mem Addr: 0x00000450

#             jal   100000
00001100000000011000011010100000
# Mem Addr: 0x00000454
# Ending ASM program at 0x00000454

# SYMBOL TABLE
#--------------
# Loop, 0x4
# Test, 0x24
# GT, 0x50
# LT, 0x58
# EQ, 0x60
# Exit, 0x6c
